# Parameters for coverage path

# Fender Part
cvrg_path_parameters:
  {
    scan_ori: true, # this param will change the scanning orientation
    scan_normals: true, # this param will scan along the normals or flat z-plane

    # hatching angle properties, this will orient that path as needed
    # start_hatch_angle: !!python/object/apply:eval [3.14159/2.0], # in RADIANS
    # start_hatch_angle: -0.785, # in RADIANS
    start_hatch_angle: 0, # in RADIANS
    # double start_hatch_angle: 0.0 # in RADIANS

    ## THESE PARAMS WILL CHANGE THE SPACING OF THE POINTS OF THE PATH
    # this param skips the hatching lines, it needs to be tweaked based on the sanding tool diameter
    skip_hatching_lines: &skip_hatching_lines 50, # UNIT LESS (ROUGH ESTIMATE - 1 UNIT IS 1 centimeter)
     # this param skips points along the hatching direction - DEFAULT VALUE 0
    skip_points_hatching_lines: 0, # UNIT LESS (ROUGH ESTIMATE - 1 UNIT IS 1 centimeter)
    # this param skips points orthogonal to the hatching direction - DEFAULT VALUE 0
    skip_points_orthogonal_lines: *skip_hatching_lines, # UNIT LESS (ROUGH ESTIMATE - 1 UNIT IS 1 centimeter)
    
    #outer boundary box points to avoid. Basically shrinking the boundary by given values
    # outer_boundary_subtraction_x_dir: 0.115, # IN METERS
    # outer_boundary_subtraction_y_dir: 0.03, # IN METERS


    # Parameter not reachable by sequential IK
    outer_boundary_subtraction_x_dir: 0.2, # IN METERS
    outer_boundary_subtraction_y_dir: 0.03, # IN METERS

    # parameter to offset the complete path in Z direction from the surface
    z_height_offset_all_waypoints: 0, # IN METERS

    # Resolution at which initial points are spaced in x and y
    path_gap: &path_gap 0.03,
    path_gap_x: *path_gap, # in METERS
    path_gap_y: *path_gap # in METERS
  }

cvrg_file_paths:
  {
    cvrg_path: "/home/rmalhan/Work/USC/Modules/cartesian_planning/cartesian_planner/src/pct/data/csv/fender.csv", # Path to save the path
    success_flags: "/home/rmalhan/Work/USC/Modules/cartesian_planning/cartesian_planner/src/pct/data/csv/success_flags.csv", # Path to save the path
    joint_states: "/home/rmalhan/Work/USC/Modules/cartesian_planning/cartesian_planner/src/pct/data/csv/fender_states.csv", # Path to save the trajectory
    mesh_path: "/home/rmalhan/Work/USC/Modules/cartesian_planning/cartesian_planner/src/pct/data/meshes/fender_bin.stl",
    mesh_viz_path: "package://pct/data/meshes/fender_bin.stl"
  }

cvrg_tf_param:
    {
        # world_T_part: [ 0.7,-0.65,0,0,0, !!python/object/apply:eval [ 90*3.14/180 ] ], # x,y,z,rx,ry,rz
        world_T_part: [ 0.9,0,0,0,0, 3.14 ], # x,y,z,rx,ry,rz
        # ff_T_tool: [-0.0327, -0.0054, 0.1383, 0.0100, -0.0002, 3.1000] #Orbital Sander original
        # ff_T_tool: [0, 0, 0.1383, 0, 0, 3.14] #Orbital Sander
        ff_T_tool: [0, -0.215, 0.2155, 0, 0, 0] #Orbital Sander
    }

viz_param:
    {
        rob_speed: 5
    }

path_find_mode: false